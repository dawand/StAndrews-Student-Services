<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/RSSLoader.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/RSSLoader</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>RSSLoader.h</DeclaredIn>
			
			<NodeRef refid="28"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RSSLoader/setDelegate:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>RSSLoader.h</DeclaredIn>			
			
			<Declaration>@property (retain, nonatomic) UIViewController&lt;RSSLoaderDelegate&gt; *delegate</Declaration>
			
			
			<Anchor>//api/name/delegate</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/RSSLoader/delegate</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>RSSLoader.h</DeclaredIn>			
			
			<Declaration>@property (retain, nonatomic) UIViewController&lt;RSSLoaderDelegate&gt; *delegate</Declaration>
			
			
			<Anchor>//api/name/delegate</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RSSLoader/setLoaded:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>RSSLoader.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign) BOOL loaded</Declaration>
			
			
			<Anchor>//api/name/loaded</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/RSSLoader/loaded</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>RSSLoader.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign) BOOL loaded</Declaration>
			
			
			<Anchor>//api/name/loaded</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RSSLoader/setSegmentedControlChoice:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>RSSLoader.h</DeclaredIn>			
			
			<Declaration>@property (weak, nonatomic) NSString *segmentedControlChoice</Declaration>
			
			
			<Anchor>//api/name/segmentedControlChoice</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/RSSLoader/segmentedControlChoice</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>RSSLoader.h</DeclaredIn>			
			
			<Declaration>@property (weak, nonatomic) NSString *segmentedControlChoice</Declaration>
			
			
			<Anchor>//api/name/segmentedControlChoice</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RSSLoader/setSourceChoice:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>RSSLoader.h</DeclaredIn>			
			
			<Declaration>@property (weak, nonatomic) NSString *sourceChoice</Declaration>
			
			
			<Anchor>//api/name/sourceChoice</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/RSSLoader/sourceChoice</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>RSSLoader.h</DeclaredIn>			
			
			<Declaration>@property (weak, nonatomic) NSString *sourceChoice</Declaration>
			
			
			<Anchor>//api/name/sourceChoice</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RSSLoader/load:::</TokenIdentifier>
			<Abstract type="html">This method loads the correct URL based on the received parameters</Abstract>
			<DeclaredIn>RSSLoader.h</DeclaredIn>			
			
			<Declaration>- (void)load:(NSString *)source :</Declaration>
			<Parameters>
				<Parameter>
					<Name>the</Name>
					<Abstract type="html">source which can be either University, school or library</Abstract>
				</Parameter><Parameter>
					<Name>the</Name>
					<Abstract type="html">choice between either news or events</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/load:::</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RSSLoader/dispatchLoadingOperation</TokenIdentifier>
			<Abstract type="html">This method is called from load method above and it creates a network queue for the request</Abstract>
			<DeclaredIn>RSSLoader.h</DeclaredIn>			
			
			<Declaration>- (void)dispatchLoadingOperation</Declaration>
			
			
			<Anchor>//api/name/dispatchLoadingOperation</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RSSLoader/getItemFromXmlElement:</TokenIdentifier>
			<Abstract type="html">This method gets the fetched XML element and returns an NSDictionary containing all the properties for the entry</Abstract>
			<DeclaredIn>RSSLoader.h</DeclaredIn>			
			
			<Declaration>- (NSDictionary *)getItemFromXmlElement:(GDataXMLElement *)xmlItem</Declaration>
			<Parameters>
				<Parameter>
					<Name>an</Name>
					<Abstract type="html">xml element</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">NSDictionary of properties of the passed xml element</Abstract></ReturnValue>
			<Anchor>//api/name/getItemFromXmlElement:</Anchor>
		</Token>
		
	</File>
</Tokens>